---
# --------------------------------

- name: "Include {{ ct_family }} tasks"
  include_tasks: setup-{{ ct_family }}.yml
  when:
  - ct_family == "debian" or ct_family == "redhat"
  tags: [ct-hashicorp]

- name: "Create main directories"
  ansible.builtin.file:
    group: "{{ item.group }}"
    mode: "{{ item.mode }}"
    owner: "{{ item.owner }}"
    path: "{{ item.path }}"
    state: directory
  loop: "{{ vault_dirs }}"
  become: true
  tags: [ct-vault]

- name: "Create entity directories"
  ansible.builtin.file:
    group: root
    mode: "0700"
    owner: root
    path: "{{ vault_cfg_dir }}/{{ item }}"
    state: directory
  loop: "{{ vault_cfg_subdirs }}"
  become: true
  tags: [ct-vault]

- name: "Download archives"
  ansible.builtin.get_url:
    url: "{{ hashicorp_repo }}/vault/{{ item.version }}/vault_{{ item.version }}_{{ hashicorp_arch }}.{{ vault_format }}"
    dest: "{{ hashicorp_dir_staging }}/vault_{{ item.version }}_{{ hashicorp_arch }}.{{ vault_format }}"
    mode: "0755"
    timeout: "{{ hashicorp_internet_timeout }}"
    validate_certs: false
  loop: "{{ vault_builds }}"
  when: item.state == "present"
  tags: [ct-vault]

- name: "Create package directories"
  ansible.builtin.file:
    state: directory
    owner: root
    group: root
    mode: "0755"
    path: "{{ hashicorp_dir_pkg }}/vault/{{ item.version }}"
  loop: "{{ vault_builds }}"
  when: item.state == "present"
  ignore_errors: "{{ ansible_check_mode }}"
  become: true
  tags: [ct-vault]

- name: "Expand archives"
  ansible.builtin.unarchive:
    src: "{{ hashicorp_dir_staging }}/vault_{{ item.version }}_{{ hashicorp_arch }}.{{ vault_format }}"
    dest: "{{ hashicorp_dir_pkg }}/vault/{{ item.version }}"
    copy: false
  loop: "{{ vault_builds }}"
  when: item.state == "present"
  ignore_errors: "{{ ansible_check_mode }}"
  become: true
  tags: [ct-vault]

- name: "Add symlink to active binary"
  ansible.builtin.file:
    dest: "{{ hashicorp_dir_bin }}/vault"
    src: "{{ hashicorp_dir_pkg }}/vault/{{ vault_version }}/vault"
    state: link
  ignore_errors: "{{ ansible_check_mode }}"
  become: true
  tags: [ct-vault]

- name: "Push bash include"
  ansible.builtin.template:
    src: vault.sh.j2
    dest: /usr/local/etc/bash.d/vault.sh
    owner: root
    group: root
    mode: 0644
  become: true
  tags: [ct-vault]

- name: "Push init-vault.sh"
  ansible.builtin.template:
    src: init-vault.sh.j2
    dest: /usr/local/bin/init-vault.sh
    owner: root
    group: root
    mode: 0700
  when: vault_role == "server"
  become: true
  tags: [ct-vault]

- name: "Push Nomad policy"
  ansible.builtin.copy:
    src: policy-nomad-cluster.hcl
    dest: /usr/local/etc/vault
    owner: root
    group: root
    mode: 0644
  when: vault_role == "server"
  become: true
  tags: [ct-vault]

- name: "Push unseal-vault.sh"
  ansible.builtin.template:
    src: unseal-vault.sh.j2
    dest: /usr/local/bin/unseal-vault.sh
    owner: root
    group: root
    mode: 0700
  when: vault_role == "server"
  become: true
  tags: [ct-vault]

- name: "Push prepare-vault.sh"
  ansible.builtin.template:
    src: prepare-vault.sh.j2
    dest: /usr/local/bin/prepare-vault.sh
    owner: root
    group: root
    mode: 0700
  when: vault_role == "server"
  become: true
  tags: [ct-vault]

- name: "Push upload script"
  ansible.builtin.copy:
    dest: /usr/local/bin/push-data-to-vault.sh
    group: root
    mode: 0755
    owner: root
    src: push-data-to-vault.sh
  when: vault_role == "server"
  become: true
  tags: [ct-vault]

- name: "Add system account"
  ansible.builtin.user:
    name: vault
    comment: "Vault system account"
    shell: /bin/nologin
    state: present
    system: true
  become: true
  tags: [ct-vault]

- name: "Render config template"
  ansible.builtin.template:
    src: "{{ vault_role }}.json.j2"
    dest: "{{ vault_etc_dir }}/{{ vault_role }}.json"
    owner: root
    group: root
    mode: "0644"
  notify: Handler_Reload_Vault
  become: true
  tags: [ct-vault]

- name: "Render systemd unit file"
  ansible.builtin.template:
    src: vault.service.j2
    dest: /etc/systemd/system/vault-{{ vault_role }}.service
    owner: root
    group: root
    mode: "0644"
  register: reg_service
  become: true
  tags: [ct-vault]

- name: "Set Vault {{ vault_role }} service to {{ vault_state }}"
  ansible.builtin.systemd:
    name: vault-{{ vault_role }}
    state: "{{ vault_state }}"
    enabled: true
    daemon_reload: "{{ reg_service is changed }}"
  become: true
  tags: [ct-vault]

# --------------------------------
# Vault credentials

- name: "Generate manifest entries for credentials"
  ansible.builtin.template:
    dest: "{{ vault_cfg_dir }}/manifest.d/credential-{{ manifest_filename }}.txt"
    mode: "0644"
    src: manifest.txt.j2
  vars:
    manifest_etype: credential
    manifest_filename: '{{ item.filename | default( item.path | regex_replace("/", "-")) }}'
    manifest_path: "{{ item.path }}"
    manifest_region: "{{ item.region_name | default(vault_region) }}"
    manifest_secret_name: "{{ item.secret_name }}"
  loop: "{{ vault_credentials }}"
  loop_control:
    label: "{{ item.path }}"
  become: true
  tags: [ct-vault]

# --------------------------------
# Vault policys

- name: "Generate policies"
  ansible.builtin.template:
    dest: "{{ vault_cfg_dir }}/policy.d/{{ item.name }}.hcl"
    mode: "0600"
    src: manifest-policy.hcl.j2
  vars:
    outer_grants: "{{ item.grants | default([]) }}"
  loop: "{{ vault_policys }}"
  loop_control:
    label: "{{ item.name }}"
  become: true
  tags: [ct-vault]

- name: "Generate manifest entries for policies"
  ansible.builtin.template:
    dest: "{{ vault_cfg_dir }}/manifest.d/policy-{{ item.name }}.txt"
    mode: "0600"
    src: manifest.txt.j2
  vars:
    manifest_etype: policy
    manifest_filename: "{{ item.name }}"
  loop: "{{ vault_policys }}"
  loop_control:
    label: "{{ item.name }}"
  become: true
  tags: [ct-vault]

# --------------------------------
# Vault roles

- name: "Generate nomad-cluster role"
  ansible.builtin.template:
    dest: "{{ vault_cfg_dir }}/role.d/role-nomad-cluster.json"
    mode: "0600"
    src: manifest-nomad-role.json.j2
  become: true
  tags: [ct-vault]

- name: "Generate manifest entry for nomad-cluster role"
  ansible.builtin.template:
    dest: "{{ vault_cfg_dir }}/manifest.d/role-nomad-cluster.txt"
    mode: "0600"
    src: manifest.txt.j2
  vars:
    manifest_etype: role
    manifest_path: "/auth/token/roles/nomad-cluster"
    manifest_filename: "role-nomad-cluster"
  become: true
  tags: [ct-vault]

- name: "Assemble Vault manifest"
  ansible.builtin.assemble:
    dest: "{{ vault_cfg_dir }}/manifest.txt"
    ignore_hidden: true
    mode: "0600"
    src: "{{ vault_cfg_dir }}/manifest.d"
  become: true
  tags: [ct-vault]

# --------------------------------
...
